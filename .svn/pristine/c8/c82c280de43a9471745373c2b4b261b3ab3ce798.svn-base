package com.jc.util;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import com.jc.mybatis.domain.Config;


public class Test2 {
	private String publicKey;
	private String privateKey;


	public void setUp() throws Exception {
		Map<String, Object> keyMap = RsaUtil.initKey();

		publicKey = RsaUtil.getPublicKey(keyMap);
		privateKey = RsaUtil.getPrivateKey(keyMap);
		System.err.println("公钥: \n\r" + publicKey);
		System.err.println("私钥： \n\r" + privateKey);
	}


	public void test() throws Exception {
		System.err.println("公钥加密——私钥解密");
		String inputStr = "abc";
		byte[] data = inputStr.getBytes();

		byte[] encodedData = RsaUtil.encryptByPublicKey(data, publicKey);

		System.err.println("加密密文：" + RsaUtil.parseByte2HexStr(encodedData));

		byte[] decodedData = RsaUtil.decryptByPrivateKey(encodedData, privateKey);

		String outputStr = new String(decodedData);
		System.err.println("加密前: " + inputStr + "\n\r" + "解密后: " + outputStr);
		//assertEquals(inputStr, outputStr);

	}


	public void testSign() throws Exception {
		System.err.println("私钥加密——公钥解密");
		String inputStr = "sign";
		byte[] data = inputStr.getBytes();

		byte[] encodedData = RsaUtil.encryptByPrivateKey(data, privateKey);

		byte[] decodedData = RsaUtil.decryptByPublicKey(encodedData, publicKey);

		String outputStr = new String(decodedData);
		System.err.println("加密前: " + inputStr + "\n\r" + "解密后: " + outputStr);
		//assertEquals(inputStr, outputStr);

		System.err.println("私钥签名——公钥验证签名");
		// 产生签名
		String sign = RsaUtil.sign(encodedData, privateKey);
		System.err.println("签名:\r" + sign);

		// 验证签名
		boolean status = RsaUtil.verify(encodedData, publicKey, sign);
		System.err.println("状态:\r" + status);
		//assertTrue(status);

	}
	
	public static void main(String[] args) {
		System.out.println("jc000#".contains("#"));
	}

}
